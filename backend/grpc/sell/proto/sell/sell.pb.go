// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.9.1
// source: proto/sell.proto

package sell

import (
	context "context"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Goods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Goods) Reset() {
	*x = Goods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sell_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goods) ProtoMessage() {}

func (x *Goods) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sell_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goods.ProtoReflect.Descriptor instead.
func (*Goods) Descriptor() ([]byte, []int) {
	return file_proto_sell_proto_rawDescGZIP(), []int{0}
}

func (x *Goods) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Goods) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	G     *Goods  `protobuf:"bytes,1,opt,name=g,proto3" json:"g,omitempty"`
	Price float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	Rest  uint32  `protobuf:"varint,3,opt,name=rest,proto3" json:"rest,omitempty"`
}

func (x *GoodsInfo) Reset() {
	*x = GoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sell_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfo) ProtoMessage() {}

func (x *GoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sell_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfo.ProtoReflect.Descriptor instead.
func (*GoodsInfo) Descriptor() ([]byte, []int) {
	return file_proto_sell_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsInfo) GetG() *Goods {
	if x != nil {
		return x.G
	}
	return nil
}

func (x *GoodsInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GoodsInfo) GetRest() uint32 {
	if x != nil {
		return x.Rest
	}
	return 0
}

type Totalgoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total []*GoodsInfo `protobuf:"bytes,1,rep,name=total,proto3" json:"total,omitempty"`
}

func (x *Totalgoods) Reset() {
	*x = Totalgoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sell_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Totalgoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Totalgoods) ProtoMessage() {}

func (x *Totalgoods) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sell_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Totalgoods.ProtoReflect.Descriptor instead.
func (*Totalgoods) Descriptor() ([]byte, []int) {
	return file_proto_sell_proto_rawDescGZIP(), []int{2}
}

func (x *Totalgoods) GetTotal() []*GoodsInfo {
	if x != nil {
		return x.Total
	}
	return nil
}

var File_proto_sell_proto protoreflect.FileDescriptor

var file_proto_sell_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x73, 0x65, 0x6c, 0x6c, 0x6c, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x51, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1a, 0x0a, 0x01, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x65,
	0x6c, 0x6c, 0x6c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x01, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x72, 0x65, 0x73, 0x74, 0x22, 0x34, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x6c, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0x9f, 0x01, 0x0a,
	0x04, 0x64, 0x65, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x6c, 0x2e, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x1a, 0x10, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x6c, 0x2e, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x12, 0x0c, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x6c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x1a, 0x10, 0x2e, 0x73, 0x65, 0x6c, 0x6c, 0x6c, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x6c, 0x6c,
	0x6c, 0x2e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x22, 0x00, 0x42, 0x0e,
	0x5a, 0x0c, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x65, 0x6c, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sell_proto_rawDescOnce sync.Once
	file_proto_sell_proto_rawDescData = file_proto_sell_proto_rawDesc
)

func file_proto_sell_proto_rawDescGZIP() []byte {
	file_proto_sell_proto_rawDescOnce.Do(func() {
		file_proto_sell_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sell_proto_rawDescData)
	})
	return file_proto_sell_proto_rawDescData
}

var file_proto_sell_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_proto_sell_proto_goTypes = []interface{}{
	(*Goods)(nil),       // 0: sell.goods
	(*GoodsInfo)(nil),   // 1: sell.goodsInfo
	(*Totalgoods)(nil),  // 2: sell.totalgoods
	(*empty.Empty)(nil), // 3: google.protobuf.Empty
}
var file_proto_sell_proto_depIdxs = []int32{
	0, // 0: sell.goodsInfo.g:type_name -> sell.goods
	1, // 1: sell.totalgoods.total:type_name -> sell.goodsInfo
	0, // 2: sell.deal.GetGoodsInfo:input_type -> sell.goods
	0, // 3: sell.deal.Consume:input_type -> sell.goods
	3, // 4: sell.deal.ListGoods:input_type -> google.protobuf.Empty
	1, // 5: sell.deal.GetGoodsInfo:output_type -> sell.goodsInfo
	1, // 6: sell.deal.Consume:output_type -> sell.goodsInfo
	2, // 7: sell.deal.ListGoods:output_type -> sell.totalgoods
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_proto_sell_proto_init() }
func file_proto_sell_proto_init() {
	if File_proto_sell_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sell_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sell_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sell_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Totalgoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sell_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sell_proto_goTypes,
		DependencyIndexes: file_proto_sell_proto_depIdxs,
		MessageInfos:      file_proto_sell_proto_msgTypes,
	}.Build()
	File_proto_sell_proto = out.File
	file_proto_sell_proto_rawDesc = nil
	file_proto_sell_proto_goTypes = nil
	file_proto_sell_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// DealClient is the client API for Deal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DealClient interface {
	GetGoodsInfo(ctx context.Context, in *Goods, opts ...grpc.CallOption) (*GoodsInfo, error)
	Consume(ctx context.Context, in *Goods, opts ...grpc.CallOption) (*GoodsInfo, error)
	ListGoods(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Totalgoods, error)
}

type dealClient struct {
	cc grpc.ClientConnInterface
}

func NewDealClient(cc grpc.ClientConnInterface) DealClient {
	return &dealClient{cc}
}

func (c *dealClient) GetGoodsInfo(ctx context.Context, in *Goods, opts ...grpc.CallOption) (*GoodsInfo, error) {
	out := new(GoodsInfo)
	err := c.cc.Invoke(ctx, "/sell.deal/GetGoodsInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dealClient) Consume(ctx context.Context, in *Goods, opts ...grpc.CallOption) (*GoodsInfo, error) {
	out := new(GoodsInfo)
	err := c.cc.Invoke(ctx, "/sell.deal/Consume", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dealClient) ListGoods(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Totalgoods, error) {
	out := new(Totalgoods)
	err := c.cc.Invoke(ctx, "/sell.deal/ListGoods", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DealServer is the server API for Deal service.
type DealServer interface {
	GetGoodsInfo(context.Context, *Goods) (*GoodsInfo, error)
	Consume(context.Context, *Goods) (*GoodsInfo, error)
	ListGoods(context.Context, *empty.Empty) (*Totalgoods, error)
}

// UnimplementedDealServer can be embedded to have forward compatible implementations.
type UnimplementedDealServer struct {
}

func (*UnimplementedDealServer) GetGoodsInfo(context.Context, *Goods) (*GoodsInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGoodsInfo not implemented")
}
func (*UnimplementedDealServer) Consume(context.Context, *Goods) (*GoodsInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Consume not implemented")
}
func (*UnimplementedDealServer) ListGoods(context.Context, *empty.Empty) (*Totalgoods, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListGoods not implemented")
}

func RegisterDealServer(s *grpc.Server, srv DealServer) {
	s.RegisterService(&_Deal_serviceDesc, srv)
}

func _Deal_GetGoodsInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Goods)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DealServer).GetGoodsInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sell.deal/GetGoodsInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DealServer).GetGoodsInfo(ctx, req.(*Goods))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deal_Consume_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Goods)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DealServer).Consume(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sell.deal/Consume",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DealServer).Consume(ctx, req.(*Goods))
	}
	return interceptor(ctx, in, info, handler)
}

func _Deal_ListGoods_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DealServer).ListGoods(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sell.deal/ListGoods",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DealServer).ListGoods(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Deal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sell.deal",
	HandlerType: (*DealServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGoodsInfo",
			Handler:    _Deal_GetGoodsInfo_Handler,
		},
		{
			MethodName: "Consume",
			Handler:    _Deal_Consume_Handler,
		},
		{
			MethodName: "ListGoods",
			Handler:    _Deal_ListGoods_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/sell.proto",
}
